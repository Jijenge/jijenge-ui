.row {
  max-width: $grid-width;
  margin: 0 auto;
  margin-bottom: $gutter-vertical;
  @include respond(tab-port) {
    margin-bottom: 4rem; 
  }
  @include respond(tab-port) {
  max-width: 35rem; 
  }
  @include respond(phone) {
    max-width: 35rem; 
  }
  &:not(:last-child) {
      
  }
  
  @include clearfix;

  [class^="col-"] {
      float: left;

      &:not(:last-child) {
          margin-right: $gutter-horizontal;
          @include respond(tab-port) {
            margin-right: 0; 
            margin-bottom: 4rem;
          }
      }
      @include respond(tab-port) {
        width: 100% !important; 
      }
  }

  .col-1-of-2 {
      width: calc((100% - #{$gutter-horizontal}) / 2);
      
  }

  .col-1-of-3 {
      width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 {
      width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
  }

  .col-1-of-4 {
      width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  .col-2-of-4 {
      width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
  }

  .col-3-of-4 {
      width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
  }

}

/*
the standard this days is 1140px for a grid but in order to make the website dynamic 
we will use rem. Also instead of just width we will use max-width: the difference been: 
if the viewport is smaller than what we specify then it will fill 100% of the available 
space. Making our website dynamic. 

MARGIN 0 AUTO: is a TRICK to center block elements inside of another block element
We say that the margin on top and bottom is 0 and left and rigth is auto 
AUTO: When we say that we want the margin to be automatically it means that the browser 
when rendering the page will automatically figure out the margin that we want on te left and 
right side. Since both are set to auto it means that left and right will be the same. 
So the element will be center
*/

/*
When we float an element the height collapses and the heigth becomes 0 so what we do is 
use the clearfix hack 
*/

// .row {
//   max-width: $grid-width; 
//   margin: 0 auto; 
//   &:not(:last-child) {
//     margin-bottom: $gutter-vertical; 
//   }

//   @include clearfix; 

//   // We can do ^ start with, = contain or $ end with 
//   [class^="col-"] {
//     float: left; 

//     &:not(:last-child) {
//       margin-right: $gutter-horizontal; 
//     }
//   }

//   .col-1-of-2 {
//     width: calc((100% - #{$gutter-horizontal}) /2); 
//   }

//   .col-1-of-3 {
//     width: calc((100% - (#{$gutter-horizontal} * 2)) / 3); 
//   }
  
//   .col-2-of-3 {
//     width: calc(2 * ((100% - (#{$gutter-horizontal} * 2)) / 3) + #{$gutter-horizontal});
//   }

//   .col-1-of-4 {
//     width: calc((100% - (#{$gutter-horizontal} * 3)) / 4); 
//   }

//   .col-2-of-4 {
//     width: calc(2 * ((100% - (#{$gutter-horizontal} * 3)) / 4) + #{$gutter-horizontal}); 
//   }

//   .col-3-of-4 {
//     width: calc(3 * ((100% - (#{$gutter-horizontal} * 3)) / 4) + (2 * #{$gutter-horizontal}));
//   }

// }
